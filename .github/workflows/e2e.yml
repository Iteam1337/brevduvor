name: E2E

on:
  # TODO: do this on push to master
  pull_request:
    branches:
      - master

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 10.16.3
        uses: actions/setup-node@v1
        with:
          node-version: 10.16.3
      # - name: Build the Drone-simulator image
      #   id: drone
      #   run: |
      #     cd packages/drone-simulator
      #     docker build . --iidfile TEMP_DRONE_IMAGE_ID.txt
      #     DRONE_DOCKER_IMAGE_ID=$(cat TEMP_DRONE_IMAGE_ID.txt)
      #     echo ::set-env name=DRONE_DOCKER_IMAGE_ID::$(echo $DRONE_DOCKER_IMAGE_ID)
      # - name: Build the API image
      #   id: api
      #   run: |
      #     cd packages/api
      #     docker build . --iidfile TEMP_API_IMAGE_ID.txt
      #     API_DOCKER_IMAGE_ID=$(cat TEMP_API_IMAGE_ID.txt)
      #     echo ::set-env name=API_DOCKER_IMAGE_ID::$(echo $API_DOCKER_IMAGE_ID)
      - name: Build the Client image
        id: client
        run: |
          cd packages/client
          docker build -t brevduvor-client:ci --build-arg MAPBOX_TOKEN=$MAPBOX_TOKEN --build-arg GRAPHQL_API=$GRAPHQL_API --build-arg GRAPHQL_WS_URI=$GRAPHQL_WS_URI . 
          # CLIENT_DOCKER_IMAGE_ID=$(cat TEMP_CLIENT_IMAGE_ID.txt)
          # echo ::set-env name=CLIENT_DOCKER_IMAGE_ID::$(echo $CLIENT_DOCKER_IMAGE_ID)
        env:
          MAPBOX_TOKEN: ${{ secrets.MAPBOX_TOKEN }}
          GRAPHQL_API: http://localhost:4000/graphql
          GRAPHQL_WS_URI: ws://localhost:4000/graphql
      - name: Start all services
        run: |
          cd packages/api
          docker-compose -f docker-compose-ci.yml up -d
      - name: Bootstrap dependencies
        run: |
          npm install
          npm run bootstrap
      - name: Run Cypress-tests
        run: |
          cd packages/client
          npm run cypress:ci
        # - name: Commit & push Cypress-videos
        #   if: always()
        #   run: |
        #     git config --global user.name ${{ secrets.GITHUB_USER }}
        #     git config --global user.email ${{ secrets.GITHUB_EMAIL }}
        #     git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
        #     echo ${GITHUB_HEAD_REF}
        #     git checkout "${GITHUB_HEAD_REF}"
        #     git add packages/client/cypress/videos
        #     git commit -m "test(e2e): submit cypress-videos"
        #     git push
        env:
          CI: true
          NODE_ENV: production
