version: "3.7"

services:
  redis:
    image: "bitnami/redis:latest"
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/bitnami/redis/data
    environment:
      - DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG # Disable these for security reasons
      - REDIS_PASSWORD=${REDIS__PASSWORD:-lg565ABwjvZw4TgAQC6R}
      - APPEND_ONLY=yes
  postgres:
    image: postgres:11.5
    volumes:
      - postgres11:/var/lib/postgresql/data
    ports:
      - 127.0.0.1:${PORTS__POSTGRES:-5432}:5432
    environment:
      - POSTGRES_USER=${POSTGRES__USER:-iteamadmin}
      - POSTGRES_PASSWORD=${POSTGRES__PASS:-adminadmin1337}
      - POSTGRES_DB=${POSTGRES__DB:-brevduvor}
      - POSTGRES_INITDB_ARGS=--encoding=utf8
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "brevduvor", "-U", "iteamadmin"]
      interval: 2s
      timeout: 5s
      retries: 3
  elasticsearch:
    image: "elasticsearch:7.3.1"
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
    ulimits:
      nproc: 3000
      nofile: 65536
      memlock: -1

  # kibana:
  #   image: 'kibana:7.3.1'
  #   depends_on:
  #     - elasticsearch
  #   environment:
  #     - ELASTICSEARCH=http://elasticsearch:9200
  #   ports:
  #     - '5601:5601'
  # osrm-backend:
  #   image: osrm/osrm-backend:v5.22.0
  #   environment:
  #     FILE_NAME: data
  #     OSRM_VERSION: v5.22.0
  #     TAR_DIRECTORY: data.tar.gz
  #     DOWNLOAD_URL: https://s3.eu-north-1.amazonaws.com/pm-mapbox-test.iteam.se
  #   volumes:
  #     - ./data:/data
  #   ports:
  #     - 5000:5000
  #   command:
  #     - bash
  #     - -c
  #     - |
  #       # install dependencies
  #       if [[ ! -f "/data/$${FILE_NAME}.osrm" ]]; then
  #         # check if tar-directory exists
  #         if [[ ! -f "/data/$${TAR_DIRECTORY}" ]]; then
  #           # check if wget exists, else install
  #           if [[ ! $$(command -v wget) ]]; then
  #             apt-get update
  #             apt-get install -y --no-install-recommends wget
  #             rm -rf /var/lib/apt/lists/*
  #           fi
  #           # certificates takes space, ignore them
  #           wget --no-check-certificate --debug "$${DOWNLOAD_URL}/$${OSRM_VERSION}/$${TAR_DIRECTORY}" -O "/data/$${TAR_DIRECTORY}"
  #         fi
  #         # extract pre-compiled data to /data
  #         tar -C / -xvf "/data/$${TAR_DIRECTORY}"
  #         # remove tar-directory, since it takes space
  #         rm -rf "/data/$${TAR_DIRECTORY}"
  #       fi
  #       # start application using extracted data in directory /data
  #       osrm-routed --algorithm mld "/data/$${FILE_NAME}.osrm"
volumes:
  postgres11:
