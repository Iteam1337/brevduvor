version: '3.7'

services:
  postgres:
    image: postgres:11.5
    volumes:
      - postgres11:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES__USER:-iteamadmin}
      - POSTGRES_PASSWORD=${POSTGRES__PASS:-adminadmin1337}
      - POSTGRES_DB=${POSTGRES__DB:-brevduvor}
      - POSTGRES_INITDB_ARGS=--encoding=utf8
    healthcheck:
      test: ['CMD', 'pg_isready', '-q', '-d', 'brevduvor', '-U', 'iteamadmin']
      interval: 2s
      timeout: 5s
      retries: 3
    networks:
      - internal

  drone-simulator:
    image: brevduvor-drone:ci
    ports:
      - '3030:3030'
  api:
    image: brevduvor-api:ci
    environment:
      - POSTGRES__HOST=postgres
      - POSTGRES__USER=iteamadmin
      - POSTGRES__PASSWORD=adminadmin1337
      - POSTGRES__DATABASE=brevduvor
      - JWT_PRIVATE_KEY=definatelyaprivatekey
    command: bash -c "./bin/wait-for-it.sh postgres:5432 && ./bin/migrate.sh && ./bin/seed-ci.sh && npm start"
    networks:
      - internal
  client:
    image: brevduvor-client:ci
    depends_on:
      - api
    networks:
      - internal
    command:
      - sh
      - -c
      - until curl http://api:4000; do sleep 1; done && exec nginx -g 'daemon off;'

  cypress:
    command: ./node_modules/.bin/cypress run
    environment:
      - TAG=${TAG}
      - IMAGE_NAME=${IMAGE_NAME}
      - CYPRESS_baseUrl=http://client:3000/
      - CYPRESS_videosFolder=/cypress/videos/${TAG}
    build:
      context: .
      dockerfile: ./cypress/Dockerfile
    volumes:
      - type: bind
        source: ./cypress/videos
        target: /cypress/videos
      - type: bind
        source: ./e2e
        target: /e2e/cypress
    networks:
      - internal
networks:
  internal:

volumes:
  postgres11:
