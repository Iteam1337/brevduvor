version: '3.7'

services:
  postgres:
    image: postgres:11.5
    volumes:
      - postgres11:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES__USER:-iteamadmin}
      - POSTGRES_PASSWORD=${POSTGRES__PASS:-adminadmin1337}
      - POSTGRES_DB=${POSTGRES__DB:-brevduvor}
      - POSTGRES_INITDB_ARGS=--encoding=utf8
    healthcheck:
      test: ['CMD', 'pg_isready', '-q', '-d', 'brevduvor', '-U', 'iteamadmin']
      interval: 2s
      timeout: 5s
      retries: 3
    networks:
      - internal

  # elasticsearch:
  #   image: 'elasticsearch:7.3.1'
  #   ports:
  #     - '9200:9200'
  #   environment:
  #     - discovery.type=single-node
  #   ulimits:
  #     nproc: 3000
  #     nofile: 65536
  #     memlock: -1

  # osrm-backend:
  #   image: osrm/osrm-backend:v5.22.0
  #   environment:
  #     FILE_NAME: data
  #     OSRM_VERSION: v5.22.0
  #     TAR_DIRECTORY: data.tar.gz
  #     DOWNLOAD_URL: https://s3.eu-north-1.amazonaws.com/pm-mapbox-test.iteam.se
  #   volumes:
  #     - ./data:/data
  #   ports:
  #     - 5000:5000
  #   command:
  #     - bash
  #     - -c
  #     - |
  #       # install dependencies
  #       if [[ ! -f "/data/$${FILE_NAME}.osrm" ]]; then
  #         # check if tar-directory exists
  #         if [[ ! -f "/data/$${TAR_DIRECTORY}" ]]; then
  #           # check if wget exists, else install
  #           if [[ ! $$(command -v wget) ]]; then
  #             apt-get update
  #             apt-get install -y --no-install-recommends wget
  #             rm -rf /var/lib/apt/lists/*
  #           fi
  #           # certificates takes space, ignore them
  #           wget --no-check-certificate --debug "$${DOWNLOAD_URL}/$${OSRM_VERSION}/$${TAR_DIRECTORY}" -O "/data/$${TAR_DIRECTORY}"
  #         fi
  #         # extract pre-compiled data to /data
  #         tar -C / -xvf "/data/$${TAR_DIRECTORY}"
  #         # remove tar-directory, since it takes space
  #         rm -rf "/data/$${TAR_DIRECTORY}"
  #       fi
  #       # start application using extracted data in directory /data
  #       osrm-routed --algorithm mld "/data/$${FILE_NAME}.osrm"

  drone-simulator:
    image: brevduvor-drone:ci
    ports:
      - '3030:3030'
  api:
    image: brevduvor-api:ci
    environment:
      - POSTGRES__HOST=postgres
      - POSTGRES__USER=iteamadmin
      - POSTGRES__PASSWORD=adminadmin1337
      - POSTGRES__DATABASE=brevduvor
      - JWT_PRIVATE_KEY=definatelyaprivatekey
    command: bash -c "./bin/wait-for-it.sh postgres:5432 && ./bin/migrate.sh && ./bin/seed-ci.sh && npm start"
    networks:
      - internal
  client:
    image: brevduvor-client:ci
    depends_on:
      - api
    networks:
      - internal
    command:
      - sh
      - -c
      - until curl http://api:4000; do sleep 1; done && npx serve --listen 3000 --no-clipboard --single dist

networks:
  internal:

volumes:
  postgres11:
