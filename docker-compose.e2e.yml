version: '3.7'

services:
  postgres:
    image: postgres:11.5
    volumes:
      - postgres11:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES__USER:-iteamadmin}
      - POSTGRES_PASSWORD=${POSTGRES__PASS:-adminadmin1337}
      - POSTGRES_DB=${POSTGRES__DB:-brevduvor}
      - POSTGRES_INITDB_ARGS=--encoding=utf8
    healthcheck:
      test: ['CMD', 'pg_isready', '-q', '-d', 'brevduvor', '-U', 'iteamadmin']
      interval: 2s
      timeout: 5s
      retries: 3
    networks:
      - internal
  drone-simulator:
    image: brevduvor-drone:ci
    networks:
      - internal
  api:
    image: brevduvor-api:ci
    environment:
      - POSTGRES__HOST=postgres
      - POSTGRES__USER=iteamadmin
      - POSTGRES__PASSWORD=adminadmin1337
      - POSTGRES__DATABASE=brevduvor
      - DB_ENV=test
      - DRONE_URL=http://drone-simulator:3030
      - WEBHOOK_URL=http://api:4000/status
      - JWT_PRIVATE_KEY=definatelyaprivatekey
    command: bash -c "./bin/wait-for-it.sh postgres:5432 && ./bin/migrate.sh && ./bin/seed-ci.sh && npm start"
    networks:
      - internal
  client:
    image: brevduvor-client:ci
    depends_on:
      - api
    networks:
      - internal
    command:
      - sh
      - -c
      - until curl http://api:4000; do sleep 1; done && exec nginx -g 'daemon off;'
  cypress:
    image: iteam1337/brevduvor-cypress:ci
    command: ./node_modules/.bin/cypress run
    environment:
      - TAG=ci
      - IMAGE_NAME=client
      - CYPRESS_baseUrl=http://client:3000/
      - CYPRESS_videosFolder=/cypress/videos/ci
    volumes:
      - type: bind
        source: ./packages/client/cypress/videos
        target: /cypress/videos
      - type: bind
        source: ./packages/client/cypress
        target: /e2e/cypress
    networks:
      - internal
networks:
  internal:

volumes:
  postgres11:
